Q.Given a Directed Graph. Count the total number of ways or paths that exist between two vertices in the directed graph. These paths doesnâ€™t contain any cycle.

sol:
  class Solution
  {
    public int pathcount=0;
    public int countPaths(int V, ArrayList<ArrayList<Integer>> adj, int source, int destination)
    {
        if(source==destination){
            return 1;
        }
        dfs(V,adj,source,destination);
        return pathcount;
    }
    public void dfs(int V,ArrayList<ArrayList<Integer>> adj,int source,int destination){
       for(Integer neighbour:adj.get(source)){
           if(neighbour==destination){
               pathcount+=1;
           }
           dfs(V,adj,neighbour,destination);
       }
    }
   }

Sample Input:
5 7
0 1 
0 2 
0 4 
1 3 
1 4 
2 4 
3 2
0 4

Sample output : 
4